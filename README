Mustache gives you a great way to generate HTML, this wraps that up in a Servlet so
you can do it quite easily. Here is an example:

Backing code (Index.java):

package mustachelets;

import mustachelet.annotations.Exists;
import mustachelet.annotations.Path;
import mustachelet.annotations.Template;

/**
 * Index page.
 * <p/>
 * User: sam
 * Date: 12/21/10
 * Time: 2:22 PM
 */
@Path("/")
@Template("index.html")
public class Index {
  @Exists
  boolean exists() {
    return true;
  }

  String name() {
    return "Sam";
  }
}

Template code (index.html):
<html>
<head>
<title>Index</title>
</head>
<body>
Hello, {{name}}!
</body>
</html>

The POST use case is a little more involved. Here is the post mustachelet:

package mustachelets;

import mustachelet.annotations.Controller;
import mustachelet.annotations.HttpMethod;
import mustachelet.annotations.Path;
import mustachelet.annotations.Template;
import mustachelet.pusher.RequestB;
import mustachelet.pusher.RequestP;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.regex.Matcher;

/**
 * Post / redirect handling
 * <p/>
 * User: sam
 * Date: 12/21/10
 * Time: 3:49 PM
 */
@Path("/post(/(.*))?")
@Template("post.html")
@HttpMethod({HttpMethod.Type.GET, HttpMethod.Type.POST})
public class Post {
  @RequestP(RequestB.RESPONSE)
  HttpServletResponse response;

  @RequestP(RequestB.REQUEST)
  HttpServletRequest request;

  @Controller(HttpMethod.Type.POST)
  boolean post() throws IOException {
    response.sendRedirect("/post/" + request.getParameter("value"));
    return false;
  }

  @RequestP(RequestB.MATCHER)
  Matcher m;

  String value() {
    return m.group(2);
  }
}

With its associated template:

<html>
<head>
  <title>Post</title>
</head>
<body>
<form method="POST" action="/post">
  <input type="text" name="value" value="{{value}}"><input type="submit">
</form>
</body>
</html>
